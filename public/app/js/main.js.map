{
  "version": 3,
  "sources": [
    "start.js",
    "controllers/Controllers.js",
    "services/Services.js",
    "directives/directives.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5KA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "main.js",
  "sourcesContent": [
    "/**\r\n * Created by kaso on 11/6/2014.\r\n */\r\n\r\nvar app = angular.module('UnifySchoolApp',\r\n    [\r\n        'ui.router',\r\n        \"angular-loading-bar\",\r\n        'UnifySchoolApp.Services',\r\n        'ui.checkbox',\r\n        'ui.bootstrap',\r\n        'ngCookies',\r\n        'ngAnimate',\r\n        'ngResource',\r\n        'ngSanitize',\r\n        'UnifySchoolApp.Controllers',\r\n        'UnifySchoolApp.directives'\r\n    ]);\r\n\r\napp.constant('ViewBaseURL', '/wizard/partials');\r\n\r\napp.config(function ($stateProvider, $urlRouterProvider, ViewBaseURL) {\r\n\r\n    $urlRouterProvider.otherwise(\"/setup/step-one\");\r\n\r\n    $stateProvider\r\n        .state('base', {\r\n            url: \"/setup\",\r\n            abstract: true,\r\n            template: '<div ui-view></div>',\r\n            resolve: {\r\n                'Config': ['SchoolSetupService', function (SchoolSetupService) {\r\n                    return SchoolSetupService.get();\r\n                }]\r\n            },\r\n            controller: ['$scope', 'Config', 'SchoolService', '$state', '$rootScope', 'ToastService',\r\n                function ($scope, Config, SchoolService, $state, $rootScope, ToastService) {\r\n                $scope.config = Config;\r\n                $scope.school = Config.school;\r\n\r\n                $scope.removeCategory = function (selectedCategory, indexToRemove) {\r\n                    $scope.config.school.school_types[selectedCategory].school_categories.splice(indexToRemove, 1);\r\n                };\r\n\r\n                $scope.addCategory = function (selectedCategory, school_category_name) {\r\n                    $scope.config.school.school_types[selectedCategory].school_categories.push({\r\n                        'display_name': school_category_name,\r\n                        'name': school_category_name,\r\n                        'arms': [\r\n                            {\r\n                                display_name: 'Default',\r\n                                name: 'default',\r\n                                arms: {\r\n                                    default: {}\r\n                                }\r\n                            }\r\n                        ]\r\n                    });\r\n                };\r\n\r\n                $scope.nextStepTwo = function () {\r\n                    $rootScope.currentProgress = '30%';\r\n                    SchoolService.save($scope.config.school, function (data) {\r\n                        console.log(data);\r\n\r\n                        ToastService.success('School details saved!, Keep going');\r\n                        $scope.school = data;\r\n                        $state.go('base.step_two');\r\n                        //SchoolService.get({id: data.id, school_slug: data.slug}, function (data) {\r\n                        //    $scope.school = data;\r\n                        //    $state.go('base.step_two');\r\n                        //});\r\n\r\n                    }, function () {\r\n                        console.log('error occurred');\r\n                        ToastService.error('Error Occurred, We couldn\\'t save school details, Retry later.');\r\n                    });\r\n                };\r\n\r\n\r\n                $scope.nextStepThree = function () {\r\n                    $rootScope.currentProgress = '70%';\r\n                    SchoolService.update(\r\n                        {\r\n                            id: $scope.school.id,\r\n                            school_slug: $scope.school.slug,\r\n                            action: 'school_categories_update'\r\n                        },\r\n                        $scope.school\r\n                    ).$promise.then(function (data) {\r\n                        console.log(data);\r\n                        $scope.school = data;\r\n                            ToastService.success('Okay, Details Saved. Keep going, Almost done.');\r\n                            $state.go('base.step_three');\r\n\r\n                    }, function () {\r\n                        console.log('error occurred');\r\n                            ToastService.error('Error Occurred, We couldn\\'t save school details, Retry later.');\r\n                    });\r\n                };\r\n\r\n                $scope.nextStepFour = function () {\r\n                    $rootScope.currentProgress = '100%';\r\n                    SchoolService.update(\r\n                        {\r\n                            id: $scope.school.id,\r\n                            school_slug: $scope.school.slug,\r\n                            action: 'admin_login_details_update'\r\n                        },\r\n                        $scope.school\r\n                    ).$promise.then(function (data) {\r\n                            console.log(data);\r\n                            $scope.school = data;\r\n                            ToastService.success('Okay, Details Saved. Keep going, Almost done.');\r\n\r\n                            $state.go('base.step_four');\r\n\r\n                        }, function () {\r\n                            console.log('error occurred');\r\n                            ToastService.error('Error Occurred, We couldn\\'t save school details, Retry later.');\r\n                        });\r\n                }\r\n            }]\r\n        })\r\n        .state('base.step_one', {\r\n            url: \"/step-one\",\r\n            templateUrl: ViewBaseURL + \"/step-one.html\",\r\n            controller: ['$scope', '$state', function ($scope, $state) {\r\n\r\n            }]\r\n        })\r\n        .state('base.step_two', {\r\n            url: \"/step-two\",\r\n            templateUrl: ViewBaseURL + \"/step-two.html\",\r\n            controller: ['$scope', function ($scope) {\r\n\r\n                $scope.createArms = function (baseName, school_arm, count) {\r\n                    school_arm.arms = [];\r\n                    for (var i = 1; i <= count; i++) {\r\n                        school_arm.arms[i - 1] = {\r\n                            'name': baseName + '_' + i,\r\n                            'display_name': ''\r\n                        }\r\n                    }\r\n                };\r\n\r\n                $scope.removeArm = function (school_category_arms, index) {\r\n                    school_category_arms.splice(index, 1);\r\n                };\r\n\r\n                $scope.addArm = function (school_category_arms, school_category_name) {\r\n                    school_category_arms.push({\r\n                        'display_name': school_category_name,\r\n                        'name': school_category_name,\r\n                        'arms': []\r\n                    });\r\n                };\r\n            }]\r\n        })\r\n        .state('base.step_three', {\r\n            url: \"/step-three\",\r\n            templateUrl: ViewBaseURL + \"/step-three.html\",\r\n            controller: ['$scope', '$state', function ($scope, $state) {\r\n            }]\r\n        })\r\n        .state('base.step_four', {\r\n            url: \"/step-four\",\r\n            templateUrl: ViewBaseURL + \"/step-four.html\",\r\n            controller: ['$scope', '$state', function ($scope, $state) {\r\n            }]\r\n        });\r\n});\r\n",
    "/**\r\n * Created by kaso on 11/6/2014.\r\n */\r\n\r\nvar app = angular.module('UnifySchoolApp.Controllers', []);",
    "/**\r\n * Created by kaso on 11/6/2014.\r\n */\r\nvar app = angular.module('UnifySchoolApp.Services', []);\r\n\r\napp.factory('SchoolService', ['$resource', function ($resource) {\r\n    return $resource('/resources/school/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });\r\n}]);\r\n\r\napp.factory('SchoolSetupService', ['$resource', function ($resource) {\r\n    return $resource('/resources/school-setup/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });\r\n}]);\r\n\r\napp.factory('PreloadTemplates',function ($templateCache, $http,ViewBaseURL) {\r\n    var templates = [\r\n        ViewBaseURL+\"/device-make.html\",\r\n        ViewBaseURL+\"/device-model.html\",\r\n        ViewBaseURL+\"/device-size.html\",\r\n        ViewBaseURL+\"/device-network.html\",\r\n        ViewBaseURL+\"/device-condition.html\",\r\n        ViewBaseURL+\"/device-reward.html\",\r\n        ViewBaseURL+\"/book-appointment.html\",\r\n        ViewBaseURL+\"/book-success.html\",\r\n        ViewBaseURL+\"/swap-location.html\"\r\n    ];\r\n    return {\r\n        run: function(){\r\n            templates.forEach(function(currentItem){\r\n                $http.get(currentItem, { cache: $templateCache });\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\n\r\napp.factory('ToastService', ['$rootScope', function ($rootScope) {\r\n\r\n    if (angular.isUndefined($rootScope.toast)) {\r\n        $rootScope.toast = {messages: [], show: false, type: 'info'};\r\n    }\r\n\r\n    return {\r\n        error: function (message) {\r\n            $rootScope.toast = {messages: [message], show: true, type: 'danger'};\r\n        },\r\n        info: function (message) {\r\n            $rootScope.toast = {messages: [message], show: true, type: 'info'};\r\n        },\r\n        success: function (message) {\r\n            $rootScope.toast = {messages: [message], show: true, type: 'success'};\r\n        }\r\n    }\r\n}]);",
    "/**\r\n * Created by kaso on 11/6/2014.\r\n */\r\n\r\nvar app = angular.module('UnifySchoolApp.directives', []);\r\n\r\n\r\napp.directive('toast', function ($animate, $timeout) {\r\n    return {\r\n        'restrict': 'EA',\r\n        'template': '<div class=\"toast alert alert-{{ type }} text-center\" ><ul><li ng-repeat=\"message in messages\"> {{ message }}</li></ul></div>',\r\n        scope: {\r\n            type: '=type',\r\n            messages: '=messages',\r\n            show: '=show'\r\n        },\r\n        'link': function link(scope, element, attrs) {\r\n            function showToast() {\r\n                //$animate.addClass(element,'toast-alert');\r\n                element.css({opacity: 1});\r\n                $timeout(hideToast, 10000);\r\n            }\r\n\r\n            function hideToast() {\r\n                element.css({opacity: 0});\r\n                //$animate.removeClass(element,'toast-alert');\r\n            }\r\n\r\n            showToast();\r\n            scope.$watch(function () {\r\n                return scope.show;\r\n            }, function (newV, oldV) {\r\n                if (newV == true) {\r\n                    showToast();\r\n                } else {\r\n                    hideToast();\r\n                }\r\n            })\r\n        }\r\n    }\r\n});\r\n"
  ],
  "sourceRoot": "/source/"
}