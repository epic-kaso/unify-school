{"version":3,"sources":["app.js","controllers.js","directives.js","filters.js","services.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9PA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["/**\r\n * Created by Ak on 2/19/2015.\r\n */\r\nvar app = angular.module(\"SchoolAdminApp\",\r\n    [\r\n        'ngSanitize',\r\n        'ui.bootstrap',\r\n        'ui.router',\r\n        'ngAnimate',\r\n        'ngResource',\r\n        'angular-loading-bar',\r\n        'SchoolAdminApp.directives',\r\n        'SchoolAdminApp.controllers',\r\n        'SchoolAdminApp.services',\r\n        'ngCookies'\r\n    ]\r\n);\r\n\r\napp.constant('ViewBaseURL', '/admin/dashboard/partial');\r\n\r\napp.config(['$urlRouterProvider', '$stateProvider', 'ViewBaseURL',\r\n    function ($urlRouterProvider, $stateProvider, ViewBaseURL) {\r\n\r\n        $stateProvider.state('home',\r\n            {\r\n                url: '/',\r\n                templateUrl: ViewBaseURL + '/home',\r\n                controller: ['$scope', 'SchoolDataService', function ($scope, SchoolDataService) {\r\n                    $scope.school = SchoolDataService.school;\r\n\r\n                    $scope.schoolCategoryClasses = $scope.school.school_type.school_categories[0].school_category_arms;\r\n                    console.log($scope.schoolCategoryClasses);\r\n\r\n                    $scope.$on('selectedSchoolCategoryChanged', function ($event, data) {\r\n                        console.log('selectedSchoolCategoryChanged occured');\r\n                        console.log(data);\r\n                    })\r\n                }]\r\n            }\r\n        );\r\n\r\n        $urlRouterProvider.otherwise('/');\r\n    }]);\r\n\r\napp.factory('sessionInjector', ['$location', function ($location) {\r\n    return {\r\n        request: function (config) {\r\n            config.headers['X-Requested-With'] = 'XMLHttpRequest';\r\n            console.log('Header modified');\r\n            return config;\r\n        },\r\n        responseError: function (response) {\r\n            if (response.status == 401) {\r\n                location.href = '/admin/auth/login';\r\n                return response;\r\n            }\r\n            return response;\r\n        },\r\n        response: function (response) {\r\n            if (response.status == 401) {\r\n                location.href = '/admin/auth/login';\r\n                return response;\r\n            }\r\n            return response;\r\n        }\r\n    };\r\n}]);\r\n\r\napp.config(['$httpProvider', function ($httpProvider) {\r\n    $httpProvider.interceptors.push('sessionInjector');\r\n}]);\r\n\r\napp.run(['$http', '$rootScope', 'CSRF_TOKEN',\r\n    function ($http, $rootScope, CSRF_TOKEN) {\r\n        $rootScope.CSRF_TOKEN = CSRF_TOKEN;\r\n        $http.defaults.headers.common['csrf_token'] = CSRF_TOKEN;\r\n    }]);\r\n\r\n\r\n","/**\r\n * Created by Ak on 2/19/2015.\r\n */\r\nvar module = angular.module('SchoolAdminApp.controllers', ['SchoolAdminApp.services']);\r\n\r\nmodule.controller('NavBarController', [\r\n        '$scope', '$rootScope', 'SchoolDataService',\r\n        function ($scope, $rootScope, SchoolDataService) {\r\n            $scope.schoolCategories = SchoolDataService.school.school_type.school_categories;\r\n            $scope.selectedSchoolCategory = $scope.schoolCategories[0];\r\n\r\n            $scope.prepareSchoolCategory = function ($event, category) {\r\n                $scope.selectedSchoolCategory = category;\r\n                $event.preventDefault();\r\n        };\r\n\r\n            $scope.$watch('selectedSchoolCategory', function (newV, oldV) {\r\n                console.log('selectedSchoolCategoryChanged event');\r\n                $rootScope.$emit('selectedSchoolCategoryChanged', {value: newV});\r\n                console.log('selectedSchoolCategoryChanged raised');\r\n        });\r\n        }]\r\n);\r\n\r\n\r\nmodule.controller('SideBarController', ['$scope', 'SchoolDataService', function ($scope, SchoolDataService) {\r\n    $scope.school = SchoolDataService.school;\r\n\r\n    $scope.schoolCategoryClasses = $scope.school.school_type.school_categories[0].school_category_arms;\r\n    console.log($scope.schoolCategoryClasses);\r\n\r\n    $scope.$on('selectedSchoolCategoryChanged', function ($event, data) {\r\n        console.log('selectedSchoolCategoryChanged occured');\r\n        console.log(data);\r\n    })\r\n}]);","/**\r\n * Created by Ak on 2/19/2015.\r\n */\r\n\r\nvar app = angular.module('SchoolAdminApp.directives', []);\r\n\r\napp.directive('backButton', function () {\r\n    return {\r\n        'restrict': 'EA',\r\n        'template': '<a class=\"btn base-resize search-btn back-btn\" href=\"\"><span class=\"fa fa-chevron-left\"></span></a>',\r\n        'link': function link(scope, element, attrs) {\r\n            element.bind('click', function (e) {\r\n                window.history.back();\r\n                e.preventDefault();\r\n            })\r\n        }\r\n    }\r\n});\r\n\r\n\r\napp.directive('webCamera', function (ScriptCam) {\r\n    return {\r\n        'restrict': 'EA',\r\n        'scope': {\r\n            imageSrc: '=',\r\n            imageEncoded: '=',\r\n            showCamera: '='\r\n        },\r\n        'template': '<div style=\"width: 320px;height: 300px;margin-right: auto;margin-left: auto\">' +\r\n        '<div>' +\r\n        '<div>' +\r\n        '<div id=\"webcamFrame\"><div id=\"webcam\"></div></div>' +\r\n        '<div style=\"margin-bottom: 10px;text-align: center;\">' +\r\n        '<button class=\"btn btn-default btn-capture\">Capture</button>' +\r\n        '<button class=\"btn btn-default goto-cam\"><span class=\"fa fa-chevron-left\"></span></button>' +\r\n        '<button class=\"btn btn-default goto-img\"><span class=\"fa fa-chevron-right\"></span></button>' +\r\n        '<button class=\"btn btn-primary save-img\"><span class=\"fa fa-save\"></span></button>' +\r\n        '</div>' +\r\n        '</div>' +\r\n        '</div>' +\r\n        '<div class=\"preview\">' +\r\n        '<img ng-src=\"{{ imageSrc }}\" class=\"img-responsive preview-img\" alt=\"\"/>' +\r\n        '</div>' +\r\n        '<div>' +\r\n        '</div></div>'\r\n        ,\r\n        'link': function link(scope, element, attrs) {\r\n            var webcam = element.find('#webcam');\r\n            var webcamFrame = element.find('#webcamFrame');\r\n            var previewImg = element.find('img.preview-img');\r\n            var gotoCameraBtn = element.find('.btn.goto-cam');\r\n            var gotoImgBtn = element.find('.btn.goto-img');\r\n            var saveImgBtn = element.find('.btn.save-img');\r\n            var captureImgBtn = element.find('.btn-capture');\r\n\r\n            webcam.scriptcam({\r\n                path: ScriptCam.path,\r\n                showMicrophoneErrors: false,\r\n                onError: onError,\r\n                cornerColor: 'eee',\r\n                uploadImage: ScriptCam.path + 'upload.gif',\r\n                onPictureAsBase: captureImage\r\n            });\r\n\r\n            captureImgBtn.on('click', function () {\r\n                captureImage();\r\n            });\r\n\r\n            gotoCameraBtn.click(function () {\r\n                scope.showCamera = true;\r\n                scope.$apply();\r\n            });\r\n\r\n            gotoImgBtn.click(function () {\r\n                scope.showCamera = false;\r\n                scope.$apply();\r\n            });\r\n\r\n            scope.$watch('showCamera', function (newV, oldV) {\r\n                if (newV == true) {\r\n                    webcamFrame.show();\r\n                    previewImg.hide();\r\n\r\n                    captureImgBtn.show();\r\n                    if (!angular.isDefined(scope.imageSrc) && scope.imageSrc != '') {\r\n                        gotoImgBtn.show();\r\n                    }\r\n                    gotoCameraBtn.hide();\r\n                    saveImgBtn.hide();\r\n\r\n                } else {\r\n                    webcamFrame.hide();\r\n                    captureImgBtn.hide();\r\n\r\n                    previewImg.show();\r\n                    gotoImgBtn.hide();\r\n                    gotoCameraBtn.show();\r\n                    saveImgBtn.show();\r\n                }\r\n            });\r\n\r\n            function captureImage() {\r\n                scope.imageSrc = base64_toimage();\r\n                scope.imageEncoded = base64_tofield();\r\n                scope.showCamera = false;\r\n                scope.$apply();\r\n            }\r\n\r\n            function base64_tofield() {\r\n                return $.scriptcam.getFrameAsBase64();\r\n            }\r\n\r\n            function base64_toimage() {\r\n                return \"data:image/png;base64,\" + $.scriptcam.getFrameAsBase64();\r\n            }\r\n\r\n            function onError(errorId, errorMsg) {\r\n                element.find('btn-capture').attr(\"disabled\", true);\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\napp.directive('fileButton', function () {\r\n    return {\r\n        'restrict': 'EA',\r\n        'scope': {\r\n            'name': '@name',\r\n            'label': '@'\r\n        },\r\n        'template': '<div class=\"input-group\"><div class=\"input-group-btn\"><span class=\"btn btn-info btn-file\">Browse.. <input type=\"file\" name=\"{{ name }}\"/> </span></div><input class=\"form-control file-select-label\" value=\"{{ label }}\" placeholder=\"Select a file\" name=\"file-name\" type=\"text\"/></div>',\r\n        'link': function link(scope, element, attrs) {\r\n            var fileInput = element.find('.btn-file input[type=file]');\r\n            //var fileLabel = element.find('input[type=text].file-select-label');\r\n            element.find('.btn.btn-file').css({\r\n                position: 'relative',\r\n                overflow: 'hidden',\r\n                width: '70px',\r\n                height: '34px'\r\n            });\r\n\r\n            fileInput.css({\r\n                top: '0',\r\n                right: '0',\r\n                position: 'absolute',\r\n                'min-width': 'inherit',\r\n                'width': 'inherit',\r\n                'min-height': 'inherit',\r\n                'height': 'inherit',\r\n                'font-size': '100px',\r\n                'text-align': 'right',\r\n                'filter': 'alpha(opacity=0)',\r\n                'opacity': '0',\r\n                'outline': 'none',\r\n                'backgound': 'white',\r\n                'cursor': 'inherit',\r\n                'display': 'block'\r\n            });\r\n\r\n            fileInput.on('change', function () {\r\n                console.log(\"file input change event\");\r\n                var input = $(this), numFiles = input.get(0).files ? input.get(0).files.length : 1;\r\n                scope.label = input.val().replace(/\\\\/g, '/').replace(/.*\\//, '');\r\n                console.log(scope.label);\r\n                scope.$apply();\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\n\r\napp.directive('toast', function ($animate, $timeout) {\r\n    return {\r\n        'restrict': 'EA',\r\n        'template': '<div class=\"toast alert alert-{{ type }} text-center\" ><ul><li ng-repeat=\"message in messages\"> {{ message }}</li></ul></div>',\r\n        scope: {\r\n            type: '=type',\r\n            messages: '=messages',\r\n            show: '=show'\r\n        },\r\n        'link': function link(scope, element, attrs) {\r\n            function showToast() {\r\n                //$animate.addClass(element,'toast-alert');\r\n                element.css({opacity: 1});\r\n                $timeout(hideToast, 10000);\r\n            }\r\n\r\n            function hideToast() {\r\n                element.css({opacity: 0});\r\n                //$animate.removeClass(element,'toast-alert');\r\n            }\r\n\r\n            showToast();\r\n            scope.$watch(function () {\r\n                return scope.show;\r\n            }, function (newV, oldV) {\r\n                if (newV == true) {\r\n                    showToast();\r\n                } else {\r\n                    hideToast();\r\n                }\r\n            })\r\n        }\r\n    }\r\n});\r\n\r\n\r\napp.directive('formItemUpdate', function ($timeout) {\r\n    return {\r\n        'restrict': 'A',\r\n        'scope': {\r\n            'status': '='\r\n        },\r\n        'link': function link(scope, element, attrs) {\r\n            function showLoadingTick() {\r\n                //element.remove('.loader-item');\r\n                element.find('.input-form-item')\r\n                    .html('<span class=\"loader-item\" style=\"margin-left: 20px\"><span class=\"fa fa-spin fa-spinner\"></span></span>');\r\n\r\n                $timeout(clear, 3000);\r\n            }\r\n\r\n            function showErrorTick() {\r\n                //element.remove('.loader-item');\r\n                element.find('.input-form-item')\r\n                    .html('<span class=\"loader-item\" style=\"margin-left: 20px;color: red;\"><span class=\"fa fa-close\"></span></span>');\r\n\r\n                $timeout(clear, 3000);\r\n            }\r\n\r\n            function showGreenTick() {\r\n                // element.remove('.loader-item');\r\n                element.find('.input-form-item')\r\n                    .html('<span class=\"loader-item\" style=\"margin-left: 20px;color: green;\"><span class=\"fa fa-check\"></span></span>')\r\n            }\r\n\r\n            function clear() {\r\n                element.find('.input-form-item')\r\n                    .html('');\r\n            }\r\n\r\n            scope.$watch('status', function (newV, oldV) {\r\n                if (newV == 'success') {\r\n                    showGreenTick();\r\n                } else if (newV == 'failure') {\r\n                    showErrorTick();\r\n                } else if (newV == 'loading') {\r\n                    showLoadingTick();\r\n                } else {\r\n                    clear();\r\n                }\r\n            })\r\n        }\r\n    }\r\n});","/**\r\n * Created by Ak on 2/19/2015.\r\n */\r\n","/**\r\n * Created by Ak on 2/19/2015.\r\n */\r\n\r\nvar app = angular.module('SchoolAdminApp.services', []);\r\n\r\napp.factory('TicketServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/ticket/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\n//TicketConfigServ\r\napp.factory('TicketConfigServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/ticket-config/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\napp.factory('DeviceBrandsServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/device_makers/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\napp.factory('AdvisersServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/advisers/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\napp.factory('DevicesServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/devices/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\napp.factory('GradingSystemServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/grading-system-config/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\n\r\napp.factory('MailServ', ['$resource', function ($resource) {\r\n    return $resource('/resources/mail', null);//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\n\r\napp.factory('NetworksServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/networks/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\n\r\napp.factory('URLServ', ['$rootScope', function ($rootScope) {\r\n    return {\r\n        \"getResourceUrlFor\": function (name) {\r\n            return $rootScope.data.resources[name];\r\n        }\r\n    }\r\n}]);\r\n\r\napp.factory('GadgetEvaluationReward', ['NetworksServ', '$cookieStore', function (NetworksServ, $cookieStore) {\r\n    var reward = {result: ''};\r\n\r\n    function getBaseLinePrice(device, size) {\r\n        var baseLinePrice = 0;\r\n\r\n        console.log('Device --reward');\r\n        console.log(device);\r\n        console.log(size);\r\n\r\n        if (device.base_line_prices.length == 1) {\r\n            baseLinePrice = parseInt(device.base_line_prices[0].value);\r\n        } else {\r\n\r\n            angular.forEach(device.base_line_prices, function (v, k) {\r\n                if (v.size == size) {\r\n                    baseLinePrice = parseInt(v.value);\r\n                }\r\n            });\r\n        }\r\n\r\n        return baseLinePrice;\r\n    }\r\n\r\n    function calculatePriceFromGrade(device, grade, baseLinePrice) {\r\n        console.log(baseLinePrice);\r\n        console.log(device.brand.normal_condition);\r\n        console.log(device.brand);\r\n        console.log(grade);\r\n\r\n        switch (grade) {\r\n            case 'A':\r\n                return parseFloat(parseInt(device.brand.normal_condition) / 100.0) * baseLinePrice;\r\n            case 'B':\r\n                return parseFloat(parseInt(device.brand.scratched_condition) / 100.0) * baseLinePrice;\r\n            case 'C':\r\n                return parseFloat(parseInt(device.brand.bad_condition) / 100.0) * baseLinePrice;\r\n        }\r\n    }\r\n\r\n    return {\r\n        \"calculate\": function (model) {\r\n            reward.result = calculatePriceFromGrade(model, model.grade, getBaseLinePrice(model.device, model.size));\r\n            console.log(reward.result);\r\n            $cookieStore.put('last-reward', reward.result);\r\n            return reward.result;\r\n        },\r\n        \"getLastReward\": function () {\r\n            return $cookieStore.get('last-reward');\r\n        },\r\n        fetchAirtelBonus: function () {\r\n            var network = NetworksServ.get({q: 'airtel'});\r\n            return network;\r\n        }\r\n    }\r\n}]);\r\n\r\napp.factory('GradeDeviceServ', ['$rootScope', function ($rootScope) {\r\n\r\n    var threshold = {\r\n        'A': 8.1,\r\n        'B': 5.85\r\n    };\r\n\r\n    function generateGradePoint(device) {\r\n        var result = {gradePoint: 0};\r\n\r\n        angular.forEach(device, function (value, key) {\r\n            if (angular.isDefined(value.rating) && value.rating != '') {\r\n                console.log(value.rating + \" -- \" + value.weight);\r\n                this.gradePoint += parseInt(value.rating) * value.weight;\r\n                console.log(this.gradePoint);\r\n            }\r\n        }, result);\r\n\r\n        return result.gradePoint;\r\n    }\r\n\r\n    function generateGradeLetter(gradePoint) {\r\n        var value = parseFloat(gradePoint);\r\n\r\n        if (value >= threshold.A) {\r\n            return 'A';\r\n        } else if (value >= threshold.B) {\r\n            return 'B';\r\n        } else {\r\n            return 'C';\r\n        }\r\n    }\r\n\r\n    return {\r\n        \"getGrade\": function (device) {\r\n            var gradePoint = generateGradePoint(device);\r\n            return generateGradeLetter(gradePoint);\r\n        }\r\n    }\r\n}]);\r\n\r\napp.factory('PreloadTemplates', ['$templateCache', '$http', 'PRELOAD_UI_LIST', function ($templateCache, $http, PRELOAD_UI_LIST) {\r\n    var templates = PRELOAD_UI_LIST.get();\r\n    return {\r\n        run: function () {\r\n            templates.forEach(function (currentItem) {\r\n                $http.get(currentItem, {cache: $templateCache});\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\n\r\napp.factory('ImageFetcher', ['$http', '$q', function ($http, $q) {\r\n    var searchUrl = \"https://www.googleapis.com/customsearch/v1?key=AIzaSyAJ_8QtWECvWTcrukqvfLmRWdARJ2bI2rk&cx=011505858740112002603:dap5yb7naau&q=\";\r\n\r\n    return {\r\n        fetch: function (query) {\r\n            var images = [];\r\n            var deferred = $q.defer();\r\n            $http.get(searchUrl + encodeURI(query)).then(function (response) {\r\n                console.log(response.data);\r\n                response.data.items.forEach(function (currentValue) {\r\n                    if (angular.isDefined(currentValue.pagemap)) {\r\n                        var temp = currentValue.pagemap.cse_image;//cse_thumbnail;\r\n                        if (angular.isDefined(temp) && angular.isArray(temp)) {\r\n                            temp.forEach(function (cValue) {\r\n                                images.push(cValue);\r\n//                                if (cValue.height > cValue.width) {\r\n//                                    images.push(cValue);\r\n//                                }\r\n                            });\r\n                        } else if (angular.isDefined(temp) && angular.isObject(temp)) {\r\n                            images.push(temp);\r\n                        }\r\n                    }\r\n                });\r\n                console.log(images);\r\n                deferred.resolve(images);\r\n            }, function (response) {\r\n                console.log(response);\r\n                deferred.reject(response);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }\r\n\r\n}]);\r\n\r\n\r\napp.factory('ToastService', ['$rootScope', function ($rootScope) {\r\n\r\n    if (angular.isUndefined($rootScope.toast)) {\r\n        $rootScope.toast = {messages: [], show: false, type: 'info'};\r\n    }\r\n\r\n    return {\r\n        error: function (message) {\r\n            $rootScope.toast = {messages: [message], show: true, type: 'danger'};\r\n        },\r\n        info: function (message) {\r\n            $rootScope.toast = {messages: [message], show: true, type: 'info'};\r\n        },\r\n        success: function (message) {\r\n            $rootScope.toast = {messages: [message], show: true, type: 'success'};\r\n        }\r\n    }\r\n}]);"],"sourceRoot":"/source/"}