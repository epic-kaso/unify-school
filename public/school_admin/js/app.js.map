{"version":3,"sources":["app.js","routes.js","services.js","controllers/settings.js","controllers/students.js"],"names":[],"mappingsgpzZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/*!\r\n *\r\n * SchoolAdminApp - Bootstrap Admin App + AngularJS\r\n *\r\n * Author: @themicon_co\r\n * Website: http://themicon.co\r\n * License: http://support.wrapbootstrap.com/knowledge_base/topics/usage-licenses\r\n *\r\n */\r\n\r\nif (typeof $ === 'undefined') {\r\n    throw new Error('This application\\'s JavaScript requires jQuery');\r\n}\r\n\r\n// APP START\r\n// -----------------------------------\r\n\r\nvar App = angular.module('SchoolAdminApp', [\r\n    'ngRoute',\r\n    'ngAnimate',\r\n    'ngStorage',\r\n    'ngCookies',\r\n    'pascalprecht.translate',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'oc.lazyLoad',\r\n    'cfp.loadingBar',\r\n    'ngSanitize',\r\n    'ngResource',\r\n    'ui.utils',\r\n    'SchoolAdminApp.services'\r\n]);\r\n\r\nApp.run(\r\n    [\"$rootScope\", \"$state\", \"$stateParams\", '$window', '$templateCache', 'SchoolDataService',\r\n        function ($rootScope, $state, $stateParams, $window, $templateCache, SchoolDataService) {\r\n            // Set reference to access them from any scope\r\n            $rootScope.$state = $state;\r\n            $rootScope.$stateParams = $stateParams;\r\n            $rootScope.$storage = $window.localStorage;\r\n\r\n            // Uncomment this to disable template cache\r\n            /*$rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {\r\n             if (typeof(toState) !== 'undefined'){\r\n             $templateCache.remove(toState.templateUrl);\r\n             }\r\n             });*/\r\n\r\n            // Scope Globals\r\n            // -----------------------------------\r\n            $rootScope.app = {\r\n                name: 'SchoolAdminApp',\r\n                description: 'UnifySchools Admin App',\r\n                year: ((new Date()).getFullYear()),\r\n                layout: {\r\n                    isFixed: true,\r\n                    isCollapsed: false,\r\n                    isBoxed: false,\r\n                    isRTL: false,\r\n                    horizontal: false,\r\n                    isFloat: false,\r\n                    asideHover: false,\r\n                    theme: null\r\n                },\r\n                useFullLayout: false,\r\n                hiddenFooter: false,\r\n                viewAnimation: 'ng-fadeInUp'\r\n            };\r\n            $rootScope.user = SchoolDataService.adminUser;\r\n\r\n        }]);\r\n\r\n/**=========================================================\r\n * Module: config.js\r\n * App routes and resources configuration\r\n =========================================================*/\r\n\r\nApp.constant('ViewBaseURL', '/admin/dashboard/partial');\r\nApp.constant('AssetsBaseURL', '/framework');\r\n\r\nApp.config(['$ocLazyLoadProvider', 'APP_REQUIRES', function ($ocLazyLoadProvider, APP_REQUIRES) {\r\n    'use strict';\r\n\r\n    // Lazy Load modules configuration\r\n    $ocLazyLoadProvider.config({\r\n        debug: false,\r\n        events: true,\r\n        modules: APP_REQUIRES.modules\r\n    });\r\n\r\n}]).config(['$controllerProvider', '$compileProvider', '$filterProvider', '$provide',\r\n    function ($controllerProvider, $compileProvider, $filterProvider, $provide) {\r\n        'use strict';\r\n        // registering components after bootstrap\r\n        App.controller = $controllerProvider.register;\r\n        App.directive = $compileProvider.directive;\r\n        App.filter = $filterProvider.register;\r\n        App.factory = $provide.factory;\r\n        App.service = $provide.service;\r\n        App.constant = $provide.constant;\r\n        App.value = $provide.value;\r\n\r\n    }]).config(['$translateProvider', function ($translateProvider) {\r\n\r\n    $translateProvider.useStaticFilesLoader({\r\n        prefix: '/framework/app/i18n/',\r\n        suffix: '.json'\r\n    });\r\n    $translateProvider.preferredLanguage('en');\r\n    $translateProvider.useLocalStorage();\r\n    $translateProvider.usePostCompiling(true);\r\n\r\n}]).config(['cfpLoadingBarProvider', function (cfpLoadingBarProvider) {\r\n    cfpLoadingBarProvider.includeBar = true;\r\n    cfpLoadingBarProvider.includeSpinner = false;\r\n    cfpLoadingBarProvider.latencyThreshold = 500;\r\n    cfpLoadingBarProvider.parentSelector = '.wrapper > section';\r\n}]).config(['$tooltipProvider', function ($tooltipProvider) {\r\n\r\n    $tooltipProvider.options({appendToBody: true});\r\n\r\n}])\r\n;\r\n\r\n/**=========================================================\r\n * Module: constants.js\r\n * Define constants to inject across the application\r\n =========================================================*/\r\nApp\r\n    .constant('APP_COLORS', {\r\n        'primary': '#5d9cec',\r\n        'success': '#27c24c',\r\n        'info': '#23b7e5',\r\n        'warning': '#ff902b',\r\n        'danger': '#f05050',\r\n        'inverse': '#131e26',\r\n        'green': '#37bc9b',\r\n        'pink': '#f532e5',\r\n        'purple': '#7266ba',\r\n        'dark': '#3a3f51',\r\n        'yellow': '#fad732',\r\n        'gray-darker': '#232735',\r\n        'gray-dark': '#3a3f51',\r\n        'gray': '#dde6e9',\r\n        'gray-light': '#e4eaec',\r\n        'gray-lighter': '#edf1f2'\r\n    })\r\n    .constant('APP_MEDIAQUERY', {\r\n        'desktopLG': 1200,\r\n        'desktop': 992,\r\n        'tablet': 768,\r\n        'mobile': 480\r\n    })\r\n    .constant('APP_REQUIRES', {\r\n        // jQuery based and standalone scripts\r\n        scripts: {\r\n            'modernizr': ['/framework/vendor/modernizr/modernizr.js'],\r\n            'icons': ['/framework/vendor/fontawesome/css/font-awesome.min.css',\r\n                '/framework/vendor/simple-line-icons/css/simple-line-icons.css']\r\n        },\r\n        // Angular based script (use the right module name)\r\n        modules: [\r\n            {\r\n                name: 'toaster',\r\n                files: ['/framework/vendor/angularjs-toaster/toaster.js', '/framework/vendor/angularjs-toaster/toaster.css']\r\n            },\r\n            {\r\n                name: 'ngTable', files: ['/framework/vendor/ng-table/dist/ng-table.min.js',\r\n                '/framework/vendor/ng-table/dist/ng-table.min.css']\r\n            },\r\n            {name: 'ngTableExport', files: ['/framework/vendor/ng-table-export/ng-table-export.js']},\r\n            {name: 'xeditable',files: ['/framework/vendor/angular-xeditable/dist/js/xeditable.js',\r\n                '/framework/vendor/angular-xeditable/dist/css/xeditable.css']},\r\n        ]\r\n\r\n    })\r\n;\r\n/**=========================================================\r\n * Module: main.js\r\n * Main Application Controller\r\n =========================================================*/\r\n\r\nApp.controller('AppController',\r\n    ['$rootScope', '$scope', '$state', '$translate', '$window', '$localStorage', '$timeout', 'toggleStateService', 'colors', 'browser', 'cfpLoadingBar',\r\n        function ($rootScope, $scope, $state, $translate, $window, $localStorage, $timeout, toggle, colors, browser, cfpLoadingBar) {\r\n            \"use strict\";\r\n\r\n            // Setup the layout mode\r\n            $rootScope.app.layout.horizontal = ( $rootScope.$stateParams.layout == 'app-h');\r\n\r\n            // Loading bar transition\r\n            // -----------------------------------\r\n            var thBar;\r\n            $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\r\n                if ($('.wrapper > section').length) // check if bar container exists\r\n                    thBar = $timeout(function () {\r\n                        cfpLoadingBar.start();\r\n                    }, 0); // sets a latency Threshold\r\n            });\r\n            $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {\r\n                event.targetScope.$watch(\"$viewContentLoaded\", function () {\r\n                    $timeout.cancel(thBar);\r\n                    cfpLoadingBar.complete();\r\n                });\r\n            });\r\n\r\n\r\n            // Hook not found\r\n            $rootScope.$on('$stateNotFound',\r\n                function (event, unfoundState, fromState, fromParams) {\r\n                    console.log(unfoundState.to); // \"lazy.state\"\r\n                    console.log(unfoundState.toParams); // {a:1, b:2}\r\n                    console.log(unfoundState.options); // {inherit:false} + default options\r\n                });\r\n            // Hook error\r\n            $rootScope.$on('$stateChangeError',\r\n                function (event, toState, toParams, fromState, fromParams, error) {\r\n                    console.log(error);\r\n                });\r\n            // Hook success\r\n            $rootScope.$on('$stateChangeSuccess',\r\n                function (event, toState, toParams, fromState, fromParams) {\r\n                    // display new view from top\r\n                    $window.scrollTo(0, 0);\r\n                    // Save the route title\r\n                    $rootScope.currTitle = $state.current.title;\r\n                });\r\n\r\n            $rootScope.currTitle = $state.current.title;\r\n            $rootScope.pageTitle = function () {\r\n                var title = $rootScope.app.name + ' - ' + ($rootScope.currTitle || $rootScope.app.description);\r\n                document.title = title;\r\n                return title;\r\n            };\r\n\r\n            // iPad may presents ghost click issues\r\n            // if( ! browser.ipad )\r\n            // FastClick.attach(document.body);\r\n\r\n            // Close submenu when sidebar change from collapsed to normal\r\n            $rootScope.$watch('app.layout.isCollapsed', function (newValue, oldValue) {\r\n                if (newValue === false)\r\n                    $rootScope.$broadcast('closeSidebarMenu');\r\n            });\r\n\r\n            // Restore layout settings\r\n            if (angular.isDefined($localStorage.layout))\r\n                $scope.app.layout = $localStorage.layout;\r\n            else\r\n                $localStorage.layout = $scope.app.layout;\r\n\r\n            $rootScope.$watch(\"app.layout\", function () {\r\n                $localStorage.layout = $scope.app.layout;\r\n            }, true);\r\n\r\n\r\n            // Allows to use branding color with interpolation\r\n            // {{ colorByName('primary') }}\r\n            $scope.colorByName = colors.byName;\r\n\r\n            // Internationalization\r\n            // ----------------------\r\n\r\n            $scope.language = {\r\n                // Handles language dropdown\r\n                listIsOpen: false,\r\n                // list of available languages\r\n                available: {\r\n                    'en': 'English',\r\n                    'es_AR': 'Espa�ol'\r\n                },\r\n                // display always the current ui language\r\n                init: function () {\r\n                    var proposedLanguage = $translate.proposedLanguage() || $translate.use();\r\n                    var preferredLanguage = $translate.preferredLanguage(); // we know we have set a preferred one in app.config\r\n                    $scope.language.selected = $scope.language.available[(proposedLanguage || preferredLanguage)];\r\n                },\r\n                set: function (localeId, ev) {\r\n                    // Set the new idiom\r\n                    $translate.use(localeId);\r\n                    // save a reference for the current language\r\n                    $scope.language.selected = $scope.language.available[localeId];\r\n                    // finally toggle dropdown\r\n                    $scope.language.listIsOpen = !$scope.language.listIsOpen;\r\n                }\r\n            };\r\n\r\n            $scope.language.init();\r\n\r\n            // Restore application classes state\r\n            toggle.restoreState($(document.body));\r\n\r\n            // cancel click event easily\r\n            $rootScope.cancel = function ($event) {\r\n                $event.stopPropagation();\r\n            };\r\n\r\n        }]);\r\n\r\n/**=========================================================\r\n * Module: sidebar-menu.js\r\n * Handle sidebar collapsible elements\r\n =========================================================*/\r\n\r\nApp.controller('SidebarController', ['$rootScope', '$scope', '$state', '$http', '$timeout', 'Utils', 'ResourcesService',\r\n    function ($rootScope, $scope, $state, $http, $timeout, Utils, ResourcesService) {\r\n\r\n        var collapseList = [];\r\n\r\n        // demo: when switch from collapse to hover, close all items\r\n        $rootScope.$watch('app.layout.asideHover', function (oldVal, newVal) {\r\n            if (newVal === false && oldVal === true) {\r\n                closeAllBut(-1);\r\n            }\r\n        });\r\n\r\n        $rootScope.$on('selectedSchoolCategoryChanged', function (event, obj) {\r\n            console.log('event selectedSchoolCat received');\r\n\r\n            if (angular.isDefined($scope.menuItems)) {\r\n                angular.forEach($scope.menuItems, function (value, key) {\r\n                    if (value.text == 'Classes') {\r\n                        value.submenu = prepareSubmenuItems(obj.value.school_category_arms);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        function prepareSubmenuItems(school_cat_arms) {\r\n            var response = [];\r\n\r\n            angular.forEach(school_cat_arms, function (value, key) {\r\n                var item = {};\r\n                item.text = value.display_name;\r\n                item.sref = 'app.viewClassArm';\r\n                item.params = {id: value.id};\r\n\r\n                this.push(item);\r\n            }, response);\r\n\r\n            return response;\r\n        }\r\n\r\n        // Check item and children active state\r\n        var isActive = function (item) {\r\n\r\n            if (!item) return;\r\n\r\n            if (!item.sref || item.sref == '#') {\r\n                var foundActive = false;\r\n                angular.forEach(item.submenu, function (value, key) {\r\n                    if (isActive(value)) foundActive = true;\r\n                });\r\n                return foundActive;\r\n            }\r\n            else\r\n                return $state.is(item.sref) || $state.includes(item.sref);\r\n        };\r\n\r\n        // Load menu from json file\r\n        // -----------------------------------\r\n\r\n        $scope.getMenuItemPropClasses = function (item) {\r\n            return (item.heading ? 'nav-heading' : '') +\r\n                (isActive(item) ? ' active' : '');\r\n        };\r\n\r\n        $scope.loadSidebarMenu = function () {\r\n\r\n            var menuURL = ResourcesService.getMenuResourceUrl();\r\n            $http.get(menuURL)\r\n                .success(function (items) {\r\n                    $scope.menuItems = items;\r\n                })\r\n                .error(function (data, status, headers, config) {\r\n                    alert('Failure loading menu');\r\n                });\r\n        };\r\n\r\n        $scope.loadSidebarMenu();\r\n\r\n        // Handle sidebar collapse items\r\n        // -----------------------------------\r\n\r\n        $scope.addCollapse = function ($index, item) {\r\n            collapseList[$index] = $rootScope.app.layout.asideHover ? true : !isActive(item);\r\n        };\r\n\r\n        $scope.isCollapse = function ($index) {\r\n            return (collapseList[$index]);\r\n        };\r\n\r\n        $scope.toggleCollapse = function ($index, isParentItem) {\r\n\r\n\r\n            // collapsed sidebar doesn't toggle drodopwn\r\n            if (Utils.isSidebarCollapsed() || $rootScope.app.layout.asideHover) return true;\r\n\r\n            // make sure the item index exists\r\n            if (angular.isDefined(collapseList[$index])) {\r\n                if (!$scope.lastEventFromChild) {\r\n                    collapseList[$index] = !collapseList[$index];\r\n                    closeAllBut($index);\r\n                }\r\n            }\r\n            else if (isParentItem) {\r\n                closeAllBut(-1);\r\n            }\r\n\r\n            $scope.lastEventFromChild = isChild($index);\r\n\r\n            return true;\r\n\r\n        };\r\n\r\n        function closeAllBut(index) {\r\n            index += '';\r\n            for (var i in collapseList) {\r\n                if (index < 0 || index.indexOf(i) < 0)\r\n                    collapseList[i] = true;\r\n            }\r\n        }\r\n\r\n        function isChild($index) {\r\n            return (typeof $index === 'string') && !($index.indexOf('-') < 0);\r\n        }\r\n\r\n    }]);\r\n\r\n/**=========================================================\r\n * Module: navbar-search.js\r\n * Navbar search toggler * Auto dismiss on ESC key\r\n =========================================================*/\r\n\r\nApp.directive('searchOpen', ['navSearch', function (navSearch) {\r\n    'use strict';\r\n\r\n    return {\r\n        restrict: 'A',\r\n        controller: [\"$scope\", \"$element\", function ($scope, $element) {\r\n            $element\r\n                .on('click', function (e) {\r\n                    e.stopPropagation();\r\n                })\r\n                .on('click', navSearch.toggle);\r\n        }]\r\n    };\r\n\r\n}]).directive('searchDismiss', ['navSearch', function (navSearch) {\r\n    'use strict';\r\n\r\n    var inputSelector = '.navbar-form input[type=\"text\"]';\r\n\r\n    return {\r\n        restrict: 'A',\r\n        controller: [\"$scope\", \"$element\", function ($scope, $element) {\r\n\r\n            $(inputSelector)\r\n                .on('click', function (e) {\r\n                    e.stopPropagation();\r\n                })\r\n                .on('keyup', function (e) {\r\n                    if (e.keyCode == 27) // ESC\r\n                        navSearch.dismiss();\r\n                });\r\n\r\n            // click anywhere closes the search\r\n            $(document).on('click', navSearch.dismiss);\r\n            // dismissable options\r\n            $element\r\n                .on('click', function (e) {\r\n                    e.stopPropagation();\r\n                })\r\n                .on('click', navSearch.dismiss);\r\n        }]\r\n    };\r\n\r\n}]);\r\n\r\n\r\n/**=========================================================\r\n * Module: sidebar.js\r\n * Wraps the sidebar and handles collapsed state\r\n =========================================================*/\r\n\r\nApp.directive('sidebar', ['$rootScope', '$window', 'Utils', function ($rootScope, $window, Utils) {\r\n\r\n    var $win = $($window);\r\n    var $body = $('body');\r\n    var $scope;\r\n    var $sidebar;\r\n    var currentState = $rootScope.$state.current.name;\r\n\r\n    return {\r\n        restrict: 'EA',\r\n        template: '<nav class=\"sidebar\" ng-transclude></nav>',\r\n        transclude: true,\r\n        replace: true,\r\n        link: function (scope, element, attrs) {\r\n\r\n            $scope = scope;\r\n            $sidebar = element;\r\n\r\n            var eventName = Utils.isTouch() ? 'click' : 'mouseenter';\r\n            var subNav = $();\r\n            $sidebar.on(eventName, '.nav > li', function () {\r\n\r\n                if (Utils.isSidebarCollapsed() || $rootScope.app.layout.asideHover) {\r\n\r\n                    subNav.trigger('mouseleave');\r\n                    subNav = toggleMenuItem($(this));\r\n\r\n                    // Used to detect click and touch events outside the sidebar\r\n                    sidebarAddBackdrop();\r\n\r\n                }\r\n\r\n            });\r\n\r\n            scope.$on('closeSidebarMenu', function () {\r\n                removeFloatingNav();\r\n            });\r\n\r\n            // Normalize state when resize to mobile\r\n            $win.on('resize', function () {\r\n                if (!Utils.isMobile())\r\n                    $body.removeClass('aside-toggled');\r\n            });\r\n\r\n            // Adjustment on route changes\r\n            $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\r\n                currentState = toState.name;\r\n                // Hide sidebar automatically on mobile\r\n                $('body.aside-toggled').removeClass('aside-toggled');\r\n\r\n                $rootScope.$broadcast('closeSidebarMenu');\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    function sidebarAddBackdrop() {\r\n        var $backdrop = $('<div/>', {'class': 'dropdown-backdrop'});\r\n        $backdrop.insertAfter('.aside-inner').on(\"click mouseenter\", function () {\r\n            removeFloatingNav();\r\n        });\r\n    }\r\n\r\n    // Open the collapse sidebar submenu items when on touch devices\r\n    // - desktop only opens on hover\r\n    function toggleTouchItem($element) {\r\n        $element\r\n            .siblings('li')\r\n            .removeClass('open')\r\n            .end()\r\n            .toggleClass('open');\r\n    }\r\n\r\n    // Handles hover to open items under collapsed menu\r\n    // -----------------------------------\r\n    function toggleMenuItem($listItem) {\r\n\r\n        removeFloatingNav();\r\n\r\n        var ul = $listItem.children('ul');\r\n\r\n        if (!ul.length) return $();\r\n        if ($listItem.hasClass('open')) {\r\n            toggleTouchItem($listItem);\r\n            return $();\r\n        }\r\n\r\n        var $aside = $('.aside');\r\n        var $asideInner = $('.aside-inner'); // for top offset calculation\r\n        // float aside uses extra padding on aside\r\n        var mar = parseInt($asideInner.css('padding-top'), 0) + parseInt($aside.css('padding-top'), 0);\r\n        var subNav = ul.clone().appendTo($aside);\r\n\r\n        toggleTouchItem($listItem);\r\n\r\n        var itemTop = ($listItem.position().top + mar) - $sidebar.scrollTop();\r\n        var vwHeight = $win.height();\r\n\r\n        subNav\r\n            .addClass('nav-floating')\r\n            .css({\r\n                position: $scope.app.layout.isFixed ? 'fixed' : 'absolute',\r\n                top: itemTop,\r\n                bottom: (subNav.outerHeight(true) + itemTop > vwHeight) ? 0 : 'auto'\r\n            });\r\n\r\n        subNav.on('mouseleave', function () {\r\n            toggleTouchItem($listItem);\r\n            subNav.remove();\r\n        });\r\n\r\n        return subNav;\r\n    }\r\n\r\n    function removeFloatingNav() {\r\n        $('.dropdown-backdrop').remove();\r\n        $('.sidebar-subnav.nav-floating').remove();\r\n        $('.sidebar li.open').removeClass('open');\r\n    }\r\n\r\n}]);\r\n/**=========================================================\r\n * Module: toggle-state.js\r\n * Toggle a classname from the BODY Useful to change a state that\r\n * affects globally the entire layout or more than one item\r\n * Targeted elements must have [toggle-state=\"CLASS-NAME-TO-TOGGLE\"]\r\n * User no-persist to avoid saving the sate in browser storage\r\n =========================================================*/\r\n\r\nApp.directive('toggleState', ['toggleStateService', function (toggle) {\r\n    'use strict';\r\n\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs) {\r\n\r\n            var $body = $('body');\r\n\r\n            $(element)\r\n                .on('click', function (e) {\r\n                    e.preventDefault();\r\n                    var classname = attrs.toggleState;\r\n\r\n                    if (classname) {\r\n                        if ($body.hasClass(classname)) {\r\n                            $body.removeClass(classname);\r\n                            if (!attrs.noPersist)\r\n                                toggle.removeState(classname);\r\n                        }\r\n                        else {\r\n                            $body.addClass(classname);\r\n                            if (!attrs.noPersist)\r\n                                toggle.addState(classname);\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n        }\r\n    };\r\n\r\n}]);\r\n\r\n/**=========================================================\r\n * Module: browser.js\r\n * Browser detection\r\n =========================================================*/\r\n\r\nApp.service('browser', function () {\r\n    \"use strict\";\r\n\r\n    var matched, browser;\r\n\r\n    var uaMatch = function (ua) {\r\n        ua = ua.toLowerCase();\r\n\r\n        var match = /(opr)[\\/]([\\w.]+)/.exec(ua) ||\r\n            /(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\r\n            /(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec(ua) ||\r\n            /(webkit)[ \\/]([\\w.]+)/.exec(ua) ||\r\n            /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\r\n            /(msie) ([\\w.]+)/.exec(ua) ||\r\n            ua.indexOf(\"trident\") >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua) ||\r\n            ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) ||\r\n            [];\r\n\r\n        var platform_match = /(ipad)/.exec(ua) ||\r\n            /(iphone)/.exec(ua) ||\r\n            /(android)/.exec(ua) ||\r\n            /(windows phone)/.exec(ua) ||\r\n            /(win)/.exec(ua) ||\r\n            /(mac)/.exec(ua) ||\r\n            /(linux)/.exec(ua) ||\r\n            /(cros)/i.exec(ua) ||\r\n            [];\r\n\r\n        return {\r\n            browser: match[3] || match[1] || \"\",\r\n            version: match[2] || \"0\",\r\n            platform: platform_match[0] || \"\"\r\n        };\r\n    };\r\n\r\n    matched = uaMatch(window.navigator.userAgent);\r\n    browser = {};\r\n\r\n    if (matched.browser) {\r\n        browser[matched.browser] = true;\r\n        browser.version = matched.version;\r\n        browser.versionNumber = parseInt(matched.version);\r\n    }\r\n\r\n    if (matched.platform) {\r\n        browser[matched.platform] = true;\r\n    }\r\n\r\n    // These are all considered mobile platforms, meaning they run a mobile browser\r\n    if (browser.android || browser.ipad || browser.iphone || browser[\"windows phone\"]) {\r\n        browser.mobile = true;\r\n    }\r\n\r\n    // These are all considered desktop platforms, meaning they run a desktop browser\r\n    if (browser.cros || browser.mac || browser.linux || browser.win) {\r\n        browser.desktop = true;\r\n    }\r\n\r\n    // Chrome, Opera 15+ and Safari are webkit based browsers\r\n    if (browser.chrome || browser.opr || browser.safari) {\r\n        browser.webkit = true;\r\n    }\r\n\r\n    // IE11 has a new token so we will assign it msie to avoid breaking changes\r\n    if (browser.rv) {\r\n        var ie = \"msie\";\r\n\r\n        matched.browser = ie;\r\n        browser[ie] = true;\r\n    }\r\n\r\n    // Opera 15+ are identified as opr\r\n    if (browser.opr) {\r\n        var opera = \"opera\";\r\n\r\n        matched.browser = opera;\r\n        browser[opera] = true;\r\n    }\r\n\r\n    // Stock Android browsers are marked as Safari on Android.\r\n    if (browser.safari && browser.android) {\r\n        var android = \"android\";\r\n\r\n        matched.browser = android;\r\n        browser[android] = true;\r\n    }\r\n\r\n    // Assign the name and platform variable\r\n    browser.name = matched.browser;\r\n    browser.platform = matched.platform;\r\n\r\n\r\n    return browser;\r\n\r\n});\r\n/**=========================================================\r\n * Module: colors.js\r\n * Services to retrieve global colors\r\n =========================================================*/\r\n\r\nApp.factory('colors', ['APP_COLORS', function (colors) {\r\n\r\n    return {\r\n        byName: function (name) {\r\n            return (colors[name] || '#fff');\r\n        }\r\n    };\r\n\r\n}]);\r\n\r\n/**=========================================================\r\n * Module: nav-search.js\r\n * Services to share navbar search functions\r\n =========================================================*/\r\n\r\nApp.service('navSearch', function () {\r\n    var navbarFormSelector = 'form.navbar-form';\r\n    return {\r\n        toggle: function () {\r\n\r\n            var navbarForm = $(navbarFormSelector);\r\n\r\n            navbarForm.toggleClass('open');\r\n\r\n            var isOpen = navbarForm.hasClass('open');\r\n\r\n            navbarForm.find('input')[isOpen ? 'focus' : 'blur']();\r\n\r\n        },\r\n\r\n        dismiss: function () {\r\n            $(navbarFormSelector)\r\n                .removeClass('open')      // Close control\r\n                .find('input[type=\"text\"]').blur() // remove focus\r\n                .val('')                    // Empty input\r\n            ;\r\n        }\r\n    };\r\n\r\n});\r\n/**=========================================================\r\n * Module: helpers.js\r\n * Provides helper functions for routes definition\r\n =========================================================*/\r\n\r\nApp.provider('RouteHelpers', ['APP_REQUIRES', function (appRequires) {\r\n    \"use strict\";\r\n\r\n    // Set here the base of the relative path\r\n    // for all app views\r\n    this.basepath = function (uri) {\r\n        return '/framework/app/views/' + uri;\r\n    };\r\n\r\n    // Generates a resolve object by passing script names\r\n    // previously configured in constant.APP_REQUIRES\r\n    this.resolveFor = function () {\r\n        var _args = arguments;\r\n        return {\r\n            deps: ['$ocLazyLoad', '$q', function ($ocLL, $q) {\r\n                // Creates a promise chain for each argument\r\n                var promise = $q.when(1); // empty promise\r\n                for (var i = 0, len = _args.length; i < len; i++) {\r\n                    promise = andThen(_args[i]);\r\n                }\r\n                return promise;\r\n\r\n                // creates promise to chain dynamically\r\n                function andThen(_arg) {\r\n                    // also support a function that returns a promise\r\n                    if (typeof _arg == 'function')\r\n                        return promise.then(_arg);\r\n                    else\r\n                        return promise.then(function () {\r\n                            // if is a module, pass the name. If not, pass the array\r\n                            var whatToLoad = getRequired(_arg);\r\n                            // simple error check\r\n                            if (!whatToLoad) return $.error('Route resolve: Bad resource name [' + _arg + ']');\r\n                            // finally, return a promise\r\n                            return $ocLL.load(whatToLoad);\r\n                        });\r\n                }\r\n\r\n                // check and returns required data\r\n                // analyze module items with the form [name: '', files: []]\r\n                // and also simple array of script files (for not angular js)\r\n                function getRequired(name) {\r\n                    if (appRequires.modules)\r\n                        for (var m in appRequires.modules)\r\n                            if (appRequires.modules[m].name && appRequires.modules[m].name === name)\r\n                                return appRequires.modules[m];\r\n                    return appRequires.scripts && appRequires.scripts[name];\r\n                }\r\n\r\n            }]\r\n        };\r\n    }; // resolveFor\r\n\r\n    // not necessary, only used in config block for routes\r\n    this.$get = function () {\r\n    };\r\n\r\n}]);\r\n\r\n\r\n/**=========================================================\r\n * Module: toggle-state.js\r\n * Services to share toggle state functionality\r\n =========================================================*/\r\n\r\nApp.service('toggleStateService', ['$rootScope', function ($rootScope) {\r\n\r\n    var storageKeyName = 'toggleState';\r\n\r\n    // Helper object to check for words in a phrase //\r\n    var WordChecker = {\r\n        hasWord: function (phrase, word) {\r\n            return new RegExp('(^|\\\\s)' + word + '(\\\\s|$)').test(phrase);\r\n        },\r\n        addWord: function (phrase, word) {\r\n            if (!this.hasWord(phrase, word)) {\r\n                return (phrase + (phrase ? ' ' : '') + word);\r\n            }\r\n        },\r\n        removeWord: function (phrase, word) {\r\n            if (this.hasWord(phrase, word)) {\r\n                return phrase.replace(new RegExp('(^|\\\\s)*' + word + '(\\\\s|$)*', 'g'), '');\r\n            }\r\n        }\r\n    };\r\n\r\n    // Return service public methods\r\n    return {\r\n        // Add a state to the browser storage to be restored later\r\n        addState: function (classname) {\r\n            var data = angular.fromJson($rootScope.$storage[storageKeyName]);\r\n\r\n            if (!data) {\r\n                data = classname;\r\n            }\r\n            else {\r\n                data = WordChecker.addWord(data, classname);\r\n            }\r\n\r\n            $rootScope.$storage[storageKeyName] = angular.toJson(data);\r\n        },\r\n\r\n        // Remove a state from the browser storage\r\n        removeState: function (classname) {\r\n            var data = $rootScope.$storage[storageKeyName];\r\n            // nothing to remove\r\n            if (!data) return;\r\n\r\n            data = WordChecker.removeWord(data, classname);\r\n\r\n            $rootScope.$storage[storageKeyName] = angular.toJson(data);\r\n        },\r\n\r\n        // Load the state string and restore the classlist\r\n        restoreState: function ($elem) {\r\n            var data = angular.fromJson($rootScope.$storage[storageKeyName]);\r\n\r\n            // nothing to restore\r\n            if (!data) return;\r\n            $elem.addClass(data);\r\n        }\r\n\r\n    };\r\n\r\n}]);\r\n/**=========================================================\r\n * Module: utils.js\r\n * Utility library to use across the theme\r\n =========================================================*/\r\n\r\nApp.service('Utils', [\"$window\", \"APP_MEDIAQUERY\", function ($window, APP_MEDIAQUERY) {\r\n    'use strict';\r\n\r\n    var $html = angular.element(\"html\"),\r\n        $win = angular.element($window),\r\n        $body = angular.element('body');\r\n\r\n    return {\r\n        // DETECTION\r\n        support: {\r\n            transition: (function () {\r\n                var transitionEnd = (function () {\r\n\r\n                    var element = document.body || document.documentElement,\r\n                        transEndEventNames = {\r\n                            WebkitTransition: 'webkitTransitionEnd',\r\n                            MozTransition: 'transitionend',\r\n                            OTransition: 'oTransitionEnd otransitionend',\r\n                            transition: 'transitionend'\r\n                        }, name;\r\n\r\n                    for (name in transEndEventNames) {\r\n                        if (element.style[name] !== undefined) return transEndEventNames[name];\r\n                    }\r\n                }());\r\n\r\n                return transitionEnd && {end: transitionEnd};\r\n            })(),\r\n            animation: (function () {\r\n\r\n                var animationEnd = (function () {\r\n\r\n                    var element = document.body || document.documentElement,\r\n                        animEndEventNames = {\r\n                            WebkitAnimation: 'webkitAnimationEnd',\r\n                            MozAnimation: 'animationend',\r\n                            OAnimation: 'oAnimationEnd oanimationend',\r\n                            animation: 'animationend'\r\n                        }, name;\r\n\r\n                    for (name in animEndEventNames) {\r\n                        if (element.style[name] !== undefined) return animEndEventNames[name];\r\n                    }\r\n                }());\r\n\r\n                return animationEnd && {end: animationEnd};\r\n            })(),\r\n            requestAnimationFrame: window.requestAnimationFrame ||\r\n            window.webkitRequestAnimationFrame ||\r\n            window.mozRequestAnimationFrame ||\r\n            window.msRequestAnimationFrame ||\r\n            window.oRequestAnimationFrame ||\r\n            function (callback) {\r\n                window.setTimeout(callback, 1000 / 60);\r\n            },\r\n            touch: (\r\n            ('ontouchstart' in window && navigator.userAgent.toLowerCase().match(/mobile|tablet/)) ||\r\n            (window.DocumentTouch && document instanceof window.DocumentTouch) ||\r\n            (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0) || //IE 10\r\n            (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0) || //IE >=11\r\n            false\r\n            ),\r\n            mutationobserver: (window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver || null)\r\n        },\r\n        // UTILITIES\r\n        isInView: function (element, options) {\r\n\r\n            var $element = $(element);\r\n\r\n            if (!$element.is(':visible')) {\r\n                return false;\r\n            }\r\n\r\n            var window_left = $win.scrollLeft(),\r\n                window_top = $win.scrollTop(),\r\n                offset = $element.offset(),\r\n                left = offset.left,\r\n                top = offset.top;\r\n\r\n            options = $.extend({topoffset: 0, leftoffset: 0}, options);\r\n\r\n            if (top + $element.height() >= window_top && top - options.topoffset <= window_top + $win.height() &&\r\n                left + $element.width() >= window_left && left - options.leftoffset <= window_left + $win.width()) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        langdirection: $html.attr(\"dir\") == \"rtl\" ? \"right\" : \"left\",\r\n        isTouch: function () {\r\n            return $html.hasClass('touch');\r\n        },\r\n        isSidebarCollapsed: function () {\r\n            return $body.hasClass('aside-collapsed');\r\n        },\r\n        isSidebarToggled: function () {\r\n            return $body.hasClass('aside-toggled');\r\n        },\r\n        isMobile: function () {\r\n            return $win.width() < APP_MEDIAQUERY.tablet;\r\n        }\r\n    };\r\n}]);\r\n// To run this code, edit file\r\n// index.html or index.jade and change\r\n// html data-ng-app attribute from\r\n// SchoolAdminApp to myAppName\r\n// -----------------------------------\r\n","var myAppRoutes = angular.module('SchoolAdminApp');\r\n\r\nmyAppRoutes.config(['$stateProvider', '$locationProvider', '$urlRouterProvider', 'RouteHelpersProvider', 'ViewBaseURL',\r\n    function ($stateProvider, $locationProvider, $urlRouterProvider, helper, ViewBaseURL) {\r\n        'use strict';\r\n\r\n        // Set the following to true to enable the HTML5 Mode\r\n        // You may have to set <base> tag in index and a routing configuration in your server\r\n        $locationProvider.html5Mode(false);\r\n\r\n        // default route\r\n        $urlRouterProvider.otherwise('/app/home');\r\n\r\n        //\r\n        // Application Routes\r\n        // -----------------------------------\r\n\r\n        $stateProvider\r\n            .state('app', {\r\n                url: '/app',\r\n                abstract: true,\r\n                templateUrl: ViewBaseURL + '/ui/app',\r\n                controller: 'AppController',\r\n                resolve: helper.resolveFor('modernizr', 'icons')\r\n            })\r\n            .state('app.home',\r\n            {\r\n                url: '/home',\r\n                templateUrl: ViewBaseURL + '/home',\r\n                title: 'School Dashboard',\r\n                controller: ['$scope',\r\n                    function ($scope) {\r\n\r\n                    }]\r\n            })\r\n            .state('app.viewClassArm',\r\n            {\r\n                url: '/class/:id',\r\n                templateUrl: ViewBaseURL + '/pages/school_class',\r\n                title: 'Class Dashboard',\r\n                controller: ['$scope',\r\n                    function ($scope) {\r\n                    }\r\n                ]\r\n            })\r\n            .state('app.settings',\r\n            {\r\n                url: '/settings',\r\n                templateUrl: ViewBaseURL + '/settings/index',\r\n                title: 'Settings',\r\n                resolve: helper.resolveFor('xeditable'),\r\n                controller: ['$scope',\r\n                    function ($scope) {\r\n                    }\r\n                ]\r\n            })\r\n            .state('app.settings.session_term',\r\n            {\r\n                url: '/session_term',\r\n                templateUrl: ViewBaseURL + '/settings/session_term',\r\n                title: 'Session & Term Settings',\r\n                controller: 'SettingsSessionTermController'\r\n            })\r\n            .state('app.settings.students',\r\n            {\r\n                url: '/students',\r\n                templateUrl: ViewBaseURL + '/settings/students',\r\n                title: 'Students Settings',\r\n                controller: 'SettingsStudentsController'\r\n            })\r\n            .state('app.settings.school',\r\n            {\r\n                url: '/school',\r\n                templateUrl: ViewBaseURL + '/settings/school',\r\n                title: 'School Settings',\r\n                controller: 'SettingsSchoolController'\r\n            })\r\n            .state('app.settings.staff',\r\n            {\r\n                url: '/staff',\r\n                templateUrl: ViewBaseURL + '/settings/staff',\r\n                title: 'Staff Settings',\r\n                controller: 'SettingsStaffController'\r\n            })\r\n            .state('app.settings.classes',\r\n            {\r\n                url: '/classes',\r\n                templateUrl: ViewBaseURL + '/settings/class',\r\n                title: 'Classes Settings',\r\n                controller: 'SettingsClassesController'\r\n            })\r\n            .state('app.settings.courses',\r\n            {\r\n                url: '/courses',\r\n                templateUrl: ViewBaseURL + '/settings/courses',\r\n                title: 'Courses Settings',\r\n                controller: 'SettingsCoursesController'\r\n            })\r\n            .state('app.settings.academics',\r\n            {\r\n                url: '/academics',\r\n                templateUrl: ViewBaseURL + '/settings/academics',\r\n                title: 'Academics Settings',\r\n                controller: 'SettingsAcademicsController'\r\n            })\r\n            .state('app.settings.reports',\r\n            {\r\n                url: '/reports',\r\n                templateUrl: ViewBaseURL + '/settings/reports',\r\n                title: 'Reports Settings',\r\n                controller: 'SettingsReportController'\r\n            })\r\n            .state('app.settings.financials',\r\n            {\r\n                url: '/financial',\r\n                templateUrl: ViewBaseURL + '/settings/financials',\r\n                title: 'Financial Settings',\r\n                controller: 'SettingsFinancialController'\r\n            })\r\n            .state('app.settings.notifications',\r\n            {\r\n                url: '/notifications',\r\n                templateUrl: ViewBaseURL + '/settings/notifications',\r\n                title: 'Notification Settings',\r\n                controller: 'SettingsNotificationController'\r\n            })\r\n            .state('app.settings.administrators',\r\n            {\r\n                url: '/administrators',\r\n                templateUrl: ViewBaseURL + '/settings/administrators',\r\n                title: 'Administrators Settings',\r\n                controller: 'SettingsAdministratorsController'\r\n            })\r\n            //Student Module Routes\r\n            .state('app.enroll_student',\r\n            {\r\n                url: '/students/enroll-student',\r\n                templateUrl: ViewBaseURL + '/students/enroll_student',\r\n                title: 'Enroll A New Student',\r\n                controller: ['$scope',\r\n                    function ($scope) {\r\n                    }\r\n                ]\r\n            })\r\n            .state('app.enroll_students',\r\n            {\r\n                url: '/students/enroll-students',\r\n                templateUrl: ViewBaseURL + '/students/enroll_students',\r\n                title: 'Enroll Many Students',\r\n                controller: ['$scope',\r\n                    function ($scope) {\r\n                    }\r\n                ]\r\n            })\r\n            .state('app.import_students',\r\n            {\r\n                url: '/students/import',\r\n                templateUrl: ViewBaseURL + '/students/import-students',\r\n                title: 'Import Students',\r\n                controller: 'StudentsImportController'\r\n            })\r\n            .state('app.export_students',\r\n            {\r\n                url: '/students/export',\r\n                templateUrl: ViewBaseURL + '/students/export-students',\r\n                title: 'Export Students',\r\n                controller: ['$scope',\r\n                    function ($scope) {\r\n                    }\r\n                ]\r\n            });\r\n        //\r\n        // CUSTOM RESOLVES\r\n        //   Add your own resolves properties\r\n        //   following this object extend\r\n        //   method\r\n        // -----------------------------------\r\n        // .state('app.someroute', {\r\n        //   url: '/some_url',\r\n        //   templateUrl: 'path_to_template.html',\r\n        //   controller: 'someController',\r\n        //   resolve: angular.extend(\r\n        //     helper.resolveFor(), {\r\n        //     // YOUR RESOLVES GO HERE\r\n        //     }\r\n        //   )\r\n        // })\r\n}]);","/**\r\n * Created by Ak on 2/19/2015.\r\n */\r\n\r\nvar app = angular.module('SchoolAdminApp.services', []);\r\n\r\napp.factory('TicketServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/ticket/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\n//TicketConfigServ\r\napp.factory('TicketConfigServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/ticket-config/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\napp.factory('DeviceBrandsServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/device_makers/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\napp.factory('AdvisersServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/advisers/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\napp.factory('DevicesServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/devices/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\napp.factory('GradingSystemServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/grading-system-config/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\n\r\napp.factory('MailServ', ['$resource', function ($resource) {\r\n    return $resource('/resources/mail', null);//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\n\r\napp.factory('NetworksServ', ['$resource', 'URLServ', function ($resource, URLServ) {\r\n    return $resource('/resources/networks/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });//URLServ.getResourceUrlFor(\"ticket\"));\r\n}]);\r\n\r\n\r\napp.factory('URLServ', ['$rootScope', function ($rootScope) {\r\n    return {\r\n        \"getResourceUrlFor\": function (name) {\r\n            return $rootScope.data.resources[name];\r\n        }\r\n    }\r\n}]);\r\n\r\napp.factory('GadgetEvaluationReward', ['NetworksServ', '$cookieStore', function (NetworksServ, $cookieStore) {\r\n    var reward = {result: ''};\r\n\r\n    function getBaseLinePrice(device, size) {\r\n        var baseLinePrice = 0;\r\n\r\n        console.log('Device --reward');\r\n        console.log(device);\r\n        console.log(size);\r\n\r\n        if (device.base_line_prices.length == 1) {\r\n            baseLinePrice = parseInt(device.base_line_prices[0].value);\r\n        } else {\r\n\r\n            angular.forEach(device.base_line_prices, function (v, k) {\r\n                if (v.size == size) {\r\n                    baseLinePrice = parseInt(v.value);\r\n                }\r\n            });\r\n        }\r\n\r\n        return baseLinePrice;\r\n    }\r\n\r\n    function calculatePriceFromGrade(device, grade, baseLinePrice) {\r\n        console.log(baseLinePrice);\r\n        console.log(device.brand.normal_condition);\r\n        console.log(device.brand);\r\n        console.log(grade);\r\n\r\n        switch (grade) {\r\n            case 'A':\r\n                return parseFloat(parseInt(device.brand.normal_condition) / 100.0) * baseLinePrice;\r\n            case 'B':\r\n                return parseFloat(parseInt(device.brand.scratched_condition) / 100.0) * baseLinePrice;\r\n            case 'C':\r\n                return parseFloat(parseInt(device.brand.bad_condition) / 100.0) * baseLinePrice;\r\n        }\r\n    }\r\n\r\n    return {\r\n        \"calculate\": function (model) {\r\n            reward.result = calculatePriceFromGrade(model, model.grade, getBaseLinePrice(model.device, model.size));\r\n            console.log(reward.result);\r\n            $cookieStore.put('last-reward', reward.result);\r\n            return reward.result;\r\n        },\r\n        \"getLastReward\": function () {\r\n            return $cookieStore.get('last-reward');\r\n        },\r\n        fetchAirtelBonus: function () {\r\n            var network = NetworksServ.get({q: 'airtel'});\r\n            return network;\r\n        }\r\n    }\r\n}]);\r\n\r\napp.factory('GradeDeviceServ', ['$rootScope', function ($rootScope) {\r\n\r\n    var threshold = {\r\n        'A': 8.1,\r\n        'B': 5.85\r\n    };\r\n\r\n    function generateGradePoint(device) {\r\n        var result = {gradePoint: 0};\r\n\r\n        angular.forEach(device, function (value, key) {\r\n            if (angular.isDefined(value.rating) && value.rating != '') {\r\n                console.log(value.rating + \" -- \" + value.weight);\r\n                this.gradePoint += parseInt(value.rating) * value.weight;\r\n                console.log(this.gradePoint);\r\n            }\r\n        }, result);\r\n\r\n        return result.gradePoint;\r\n    }\r\n\r\n    function generateGradeLetter(gradePoint) {\r\n        var value = parseFloat(gradePoint);\r\n\r\n        if (value >= threshold.A) {\r\n            return 'A';\r\n        } else if (value >= threshold.B) {\r\n            return 'B';\r\n        } else {\r\n            return 'C';\r\n        }\r\n    }\r\n\r\n    return {\r\n        \"getGrade\": function (device) {\r\n            var gradePoint = generateGradePoint(device);\r\n            return generateGradeLetter(gradePoint);\r\n        }\r\n    }\r\n}]);\r\n\r\napp.factory('PreloadTemplates', ['$templateCache', '$http', 'PRELOAD_UI_LIST', function ($templateCache, $http, PRELOAD_UI_LIST) {\r\n    var templates = PRELOAD_UI_LIST.get();\r\n    return {\r\n        run: function () {\r\n            templates.forEach(function (currentItem) {\r\n                $http.get(currentItem, {cache: $templateCache});\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\n\r\napp.factory('ImageFetcher', ['$http', '$q', function ($http, $q) {\r\n    var searchUrl = \"https://www.googleapis.com/customsearch/v1?key=AIzaSyAJ_8QtWECvWTcrukqvfLmRWdARJ2bI2rk&cx=011505858740112002603:dap5yb7naau&q=\";\r\n\r\n    return {\r\n        fetch: function (query) {\r\n            var images = [];\r\n            var deferred = $q.defer();\r\n            $http.get(searchUrl + encodeURI(query)).then(function (response) {\r\n                console.log(response.data);\r\n                response.data.items.forEach(function (currentValue) {\r\n                    if (angular.isDefined(currentValue.pagemap)) {\r\n                        var temp = currentValue.pagemap.cse_image;//cse_thumbnail;\r\n                        if (angular.isDefined(temp) && angular.isArray(temp)) {\r\n                            temp.forEach(function (cValue) {\r\n                                images.push(cValue);\r\n//                                if (cValue.height > cValue.width) {\r\n//                                    images.push(cValue);\r\n//                                }\r\n                            });\r\n                        } else if (angular.isDefined(temp) && angular.isObject(temp)) {\r\n                            images.push(temp);\r\n                        }\r\n                    }\r\n                });\r\n                console.log(images);\r\n                deferred.resolve(images);\r\n            }, function (response) {\r\n                console.log(response);\r\n                deferred.reject(response);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }\r\n\r\n}]);\r\n\r\n\r\napp.factory('ToastService', ['$rootScope', function ($rootScope) {\r\n\r\n    if (angular.isUndefined($rootScope.toast)) {\r\n        $rootScope.toast = {messages: [], show: false, type: 'info'};\r\n    }\r\n\r\n    return {\r\n        error: function (message) {\r\n            $rootScope.toast = {messages: [message], show: true, type: 'danger'};\r\n        },\r\n        info: function (message) {\r\n            $rootScope.toast = {messages: [message], show: true, type: 'info'};\r\n        },\r\n        success: function (message) {\r\n            $rootScope.toast = {messages: [message], show: true, type: 'success'};\r\n        }\r\n    }\r\n}]);\r\n\r\n\r\napp.service('TableDataService', ['SchoolDataService', function (SchoolDataService) {\r\n\r\n    var TableData = {\r\n        cache: SchoolDataService.schools,\r\n        getData: function ($defer, params) {\r\n\r\n            filterdata($defer, params);\r\n\r\n            function filterdata($defer, params) {\r\n                var from = (params.page() - 1) * params.count();\r\n                var to = params.page() * params.count();\r\n                var filteredData = TableData.cache.slice(from, to);\r\n\r\n                params.total(TableData.cache.length);\r\n                $defer.resolve(filteredData);\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    return TableData;\r\n\r\n}]);\r\n\r\napp.factory('SchoolService', ['$resource', function ($resource) {\r\n    return $resource('/admin/resources/school/:id', {id: '@id'}, {\r\n        'update': {method: 'PUT'}\r\n    });\r\n}]);","var app = angular.module('SchoolAdminApp');\r\n/**\r\n * Controllers\r\n *\r\n */\r\n\r\napp.controller('NavBarController', [\r\n        '$scope', '$rootScope', 'SchoolDataService',\r\n        function ($scope, $rootScope, SchoolDataService) {\r\n            $scope.schoolCategories = SchoolDataService.school.school_type.school_categories;\r\n            $scope.selectedSchoolCategory = $scope.schoolCategories[0];\r\n\r\n            $scope.prepareSchoolCategory = function ($event, category) {\r\n                $scope.selectedSchoolCategory = category;\r\n                $event.preventDefault();\r\n            };\r\n\r\n            $scope.$watch('selectedSchoolCategory', function (newV, oldV) {\r\n                console.log('selectedSchoolCategoryChanged event');\r\n                $rootScope.$broadcast('selectedSchoolCategoryChanged', {value: newV});\r\n                console.log('selectedSchoolCategoryChanged raised');\r\n            });\r\n        }]\r\n);\r\n\r\n\r\n/**-------------------------------------------------------------------------------\r\n * Settings Controllers Start\r\n * -----------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Session and Term Settings Controller\r\n */\r\n\r\napp.controller('SettingsSessionTermController',['$scope','SchoolDataService',\r\n    function ($scope,SchoolDataService) {\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n]);\r\n\r\n/**\r\n * Students Settings Controller\r\n */\r\n\r\napp.controller('SettingsStudentsController',['$scope','SchoolDataService',\r\n    function ($scope,SchoolDataService) {\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n]);\r\n\r\n/**\r\n * School Settings Controller\r\n *\r\n */\r\n\r\napp.controller('SettingsSchoolController',['$scope','SchoolDataService','editableOptions', 'editableThemes',\r\n    function ($scope,SchoolDataService,editableOptions, editableThemes) {\r\n\r\n        //template start\r\n        editableOptions.theme = 'bs3';\r\n\r\n        editableThemes.bs3.inputClass = 'input-sm';\r\n        editableThemes.bs3.buttonsClass = 'btn-sm';\r\n        editableThemes.bs3.submitTpl = '<button type=\"submit\" class=\"btn btn-success\"><span class=\"fa fa-check\"></span></button>';\r\n        editableThemes.bs3.cancelTpl = '<button type=\"button\" class=\"btn btn-default\" ng-click=\"$form.$cancel()\">'+\r\n        '<span class=\"fa fa-times text-muted\"></span>'+\r\n        '</button>';\r\n\r\n        $scope.user = {\r\n            email: 'email@example.com',\r\n            tel: '123-45-67',\r\n            number: 29,\r\n            range: 10,\r\n            url: 'http://example.com',\r\n            search: 'blabla',\r\n            color: '#6a4415',\r\n            date: null,\r\n            time: '12:30',\r\n            datetime: null,\r\n            month: null,\r\n            week: null,\r\n            desc: 'Sed pharetra euismod dolor, id feugiat ante volutpat eget. '\r\n        };\r\n\r\n        // Local select\r\n        // -----------------------------------\r\n\r\n        $scope.user2 = {\r\n            status: 2\r\n        };\r\n\r\n        $scope.statuses = [\r\n            {value: 1, text: 'status1'},\r\n            {value: 2, text: 'status2'},\r\n            {value: 3, text: 'status3'},\r\n            {value: 4, text: 'status4'}\r\n        ];\r\n\r\n        $scope.showStatus = function() {\r\n            var selected = $filter('filter')($scope.statuses, {value: $scope.user2.status});\r\n            return ($scope.user2.status && selected.length) ? selected[0].text : 'Not set';\r\n        };\r\n\r\n        // select remote\r\n        // -----------------------------------\r\n\r\n        $scope.user3 = {\r\n            id: 4,\r\n            text: 'admin' // original value\r\n        };\r\n\r\n        $scope.groups = [];\r\n\r\n        $scope.loadGroups = function() {\r\n            return $scope.groups.length ? null : $http.get('server/xeditable-groups.json').success(function(data) {\r\n                $scope.groups = data;\r\n            });\r\n        };\r\n\r\n        $scope.$watch('user3.id', function(newVal, oldVal) {\r\n            if (newVal !== oldVal) {\r\n                var selected = $filter('filter')($scope.groups, {id: $scope.user3.id});\r\n                $scope.user3.text = selected.length ? selected[0].text : null;\r\n            }\r\n        });\r\n\r\n        // Typeahead\r\n        // -----------------------------------\r\n\r\n        $scope.user4 = {\r\n            state: 'Arizona'\r\n        };\r\n\r\n        $scope.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\r\n\r\n        //template stop\r\n\r\n\r\n\r\n\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n])\r\n\r\n/**\r\n * Staff Settings Controller\r\n */\r\n\r\n\r\napp.controller('SettingsStaffController',['$scope','SchoolDataService',\r\n    function ($scope,SchoolDataService) {\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n]);\r\n\r\n/**\r\n * Classes Settings Controller\r\n */\r\n\r\napp.controller('SettingsClassesController',['$scope','SchoolDataService',\r\n    function ($scope,SchoolDataService) {\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n]);\r\n\r\n/**\r\n\r\n Courses Settings Controller\r\n */\r\n\r\napp.controller('SettingsCoursesController',['$scope','SchoolDataService',\r\n    function ($scope,SchoolDataService) {\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n]);\r\n\r\n/**\r\n * Academics Settings Controller\r\n */\r\n\r\napp.controller('SettingsAcademicsController',['$scope','SchoolDataService',\r\n    function ($scope,SchoolDataService) {\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n]);\r\n\r\n/**\r\n * Report Settings Controller\r\n */\r\n\r\napp.controller('SettingsReportController',['$scope','SchoolDataService',\r\n    function ($scope,SchoolDataService) {\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n]);\r\n\r\n\r\n\r\napp.controller('SettingsFinancialController',['$scope','SchoolDataService',\r\n    function ($scope,SchoolDataService) {\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n]);\r\n\r\n\r\n/**\r\n * Notification Settings Controller\r\n */\r\napp.controller('SettingsNotificationController',['$scope','SchoolDataService',\r\n    function ($scope,SchoolDataService) {\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n]);\r\n\r\n\r\n\r\napp.controller('SettingsAdministratorsController',['$scope','SchoolDataService',\r\n    function ($scope,SchoolDataService) {\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n    }\r\n]);\r\n","var app = angular.module('SchoolAdminApp');\r\n\r\napp.controller('StudentsImportController',['$scope','SchoolDataService',\r\n    function ($scope,SchoolDataService) {\r\n\r\n        console.log(SchoolDataService.school.school_type.school_categories);\r\n\r\n        $scope.current_school_classes = null;\r\n        $scope.school_categories = SchoolDataService.school.school_type.school_categories;\r\n        $scope.sessions = getSessionsFrom(SchoolDataService);\r\n\r\n        $scope.sub_sessions = SchoolDataService.school.session_type.sub_sessions;\r\n        $scope.form = {\r\n            school_category: null\r\n        };\r\n\r\n        $scope.$watch('form.school_category',function(newV,oldV){\r\n            setCurrentSchoolClassesForSchoolType(newV);\r\n        });\r\n\r\n        function getSessionsFrom(SchoolDataService){\r\n            return SchoolDataService.school.sessions.sort(function(a,b){\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n\r\n        function setCurrentSchoolClassesForSchoolType(newV){\r\n            var school_type = null;\r\n            angular.forEach($scope.school_categories,function(value,key){\r\n                if(value.id == newV){\r\n                    school_type = value;\r\n                    return ;\r\n                }\r\n            });\r\n\r\n            if(angular.isDefined(school_type) && school_type != null){\r\n                $scope.current_school_classes = school_type.classes;\r\n            }\r\n        }\r\n\r\n    }\r\n]);"],"sourceRoot":"/source/"}